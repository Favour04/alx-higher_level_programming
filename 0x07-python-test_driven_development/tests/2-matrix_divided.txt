=======================================
Test file for "2-matrix_divided" module
=======================================

This module contain only one function 
'matrix_divided' and divide each 
numbers in a list.

Import module
=============
::

>>> divide = __import__('2-matrix_divided').matrix_divided

How is suppose to work
======================

::

>>> divide([[1,2,3]], 4)
[[0.25, 0.5, 0.75]]

::

>>> divide([[1,2,3], [1,2,3], [4,5,6], [7,8,9]], 4)
[[0.25, 0.5, 0.75], [0.25, 0.5, 0.75], [1.0, 1.25, 1.5], [1.75, 2.0, 2.25]]

Errors
======

mising one argument
====================
::

>>> divide([1,2,3])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: matrix_divided() missing 1 required positional argument: 'div'

Wrong type
==========
::

>>> divide([1,2,3], 4)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/favour/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 12, in matrix_divided
    raise TypeError('matrix must be a matrix\
TypeError: matrix must be a matrix (list of lists) of integers/floats

::

>>> divide([1, [1,2,3]], 4)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/favour/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 12, in matrix_divided
    raise TypeError('matrix must be a matrix\
TypeError: matrix must be a matrix (list of lists) of integers/floats

Divided by 0
============
::

>>> divide([[1,2,3]], 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/favour/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 31, in matrix_divided
    raise ZeroDivisionError('division by zero')
ZeroDivisionError: division by zero
